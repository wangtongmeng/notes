import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.C5rzuSi5.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe/interview/公司面试/字节-飞书审批.md","filePath":"fe/interview/公司面试/字节-飞书审批.md","lastUpdated":1698398380000}'),l={name:"fe/interview/公司面试/字节-飞书审批.md"},h=n(`<h2 id="项目工程规范化做了什么" tabindex="-1">项目工程规范化做了什么 <a class="header-anchor" href="#项目工程规范化做了什么" aria-label="Permalink to &quot;项目工程规范化做了什么&quot;">​</a></h2><p>在前端项目中，可以采用以下一些规范和最佳实践来提高工程的规范化和可维护性：</p><ol><li><p>代码风格规范：采用一致的代码风格可以增加代码的可读性和可维护性。可以使用工具如ESLint或Prettier来对代码进行静态检查和格式化。</p></li><li><p>目录结构规范：定义清晰的目录结构可以方便团队成员理解项目的组织方式。可以按照功能模块、文件类型或者特定的业务需求进行组织。</p></li><li><p>文件命名规范：使用有意义且一致的文件命名规范可以提高代码的可读性和可维护性。可以使用驼峰命名法、短横线命名法等。</p></li><li><p>编码规范：制定一致的编码规范，包括变量命名、函数命名、注释规范等。这可以帮助团队成员理解和维护彼此的代码。</p></li><li><p>代码注释规范：为代码添加清晰的注释可以提高代码的可读性和可维护性。注释应该解释代码的意图、算法、边界条件等关键信息。</p></li><li><p>版本控制规范：使用版本控制系统（如Git）管理代码，并定义分支管理策略、提交规范等。这有助于团队在多人协作中保持代码的一致性和追踪变更历史。</p></li><li><p>构建和打包规范：使用工具如Webpack或Parcel进行项目构建和打包时，可以定义一致的配置和规范，包括文件压缩、静态资源管理、代码分割等。</p></li><li><p>测试规范：编写单元测试、集成测试和端到端测试，确保代码的质量和功能的正确性。使用工具如Jest、Mocha、Cypress等来进行测试。</p></li><li><p>文档规范：编写项目文档，包括项目说明、技术文档、API文档等。这有助于团队成员理解项目的设计和实现细节。</p></li><li><p>性能优化规范：遵循性能优化的最佳实践，包括减少网络请求、使用缓存、代码优化等，以提升应用的加载速度和响应性能。</p></li></ol><p>以上是一些常见的前端项目工程规范化的方面，根据具体项目的需求和团队的偏好，还可以进一步制定和补充其他规范。</p><h2 id="webpack-工程优化做了哪些" tabindex="-1">webpack 工程优化做了哪些 <a class="header-anchor" href="#webpack-工程优化做了哪些" aria-label="Permalink to &quot;webpack 工程优化做了哪些&quot;">​</a></h2><h2 id="mobx-状态管理与-redux-有什么不同" tabindex="-1">Mobx 状态管理与 Redux 有什么不同 <a class="header-anchor" href="#mobx-状态管理与-redux-有什么不同" aria-label="Permalink to &quot;Mobx 状态管理与 Redux 有什么不同&quot;">​</a></h2><h2 id="单点登录-sp-发起登录的过程" tabindex="-1">单点登录 SP 发起登录的过程 <a class="header-anchor" href="#单点登录-sp-发起登录的过程" aria-label="Permalink to &quot;单点登录 SP 发起登录的过程&quot;">​</a></h2><h2 id="浏览器-强缓存、协商缓存-都针对那些资源" tabindex="-1">浏览器 强缓存、协商缓存 都针对那些资源 <a class="header-anchor" href="#浏览器-强缓存、协商缓存-都针对那些资源" aria-label="Permalink to &quot;浏览器 强缓存、协商缓存 都针对那些资源&quot;">​</a></h2><h2 id="cookie-有哪些字段" tabindex="-1">cookie 有哪些字段 <a class="header-anchor" href="#cookie-有哪些字段" aria-label="Permalink to &quot;cookie 有哪些字段&quot;">​</a></h2><h2 id="web-安全-xss-csrf-细节" tabindex="-1">web 安全 xss csrf 细节 <a class="header-anchor" href="#web-安全-xss-csrf-细节" aria-label="Permalink to &quot;web 安全 xss csrf 细节&quot;">​</a></h2><h2 id="第三方授权认证-sdk-怎么发包-发什么样的包" tabindex="-1">第三方授权认证 SDK 怎么发包，发什么样的包 <a class="header-anchor" href="#第三方授权认证-sdk-怎么发包-发什么样的包" aria-label="Permalink to &quot;第三方授权认证 SDK 怎么发包，发什么样的包&quot;">​</a></h2><p>当你准备将第三方授权认证 SDK 发布为一个包时，你需要进行以下步骤：</p><ol><li><p>初始化项目：创建一个新的项目目录，并在该目录下初始化一个新的 npm 包。可以通过运行 <code>npm init</code> 命令来初始化包，并按照提示填写相关信息，如包名、版本号、描述等。</p></li><li><p>编写代码：在项目目录下编写你的第三方授权认证 SDK 的代码。根据你的需求和目标平台，可以使用不同的编程语言和框架来实现 SDK。确保你的代码符合规范，具有良好的可读性和可维护性。</p></li><li><p>定义依赖：确定你的 SDK 依赖的第三方库和工具。在项目的根目录下创建一个 <code>package.json</code> 文件（如果 <code>npm init</code> 时没有自动生成），并在其中添加你的依赖项。可以使用 <code>npm install</code> 命令来安装这些依赖项。</p></li><li><p>添加入口文件：在你的项目中添加一个入口文件，用于导出 SDK 的公共接口。这个文件将作为用户在其他项目中引入你的 SDK 时的入口点。</p></li><li><p>测试：编写测试用例来验证你的 SDK 的功能和正确性。可以使用测试框架（如Jest、Mocha等）来编写和运行测试。</p></li><li><p>文档：编写用户文档，包括 SDK 的安装说明、使用示例、API 文档等。这有助于其他开发者理解和使用你的 SDK。</p></li><li><p>构建和打包：使用适当的工具（如Webpack、Babel等）对你的 SDK 代码进行构建和打包，以便在不同的环境中使用。</p></li><li><p>发布包：将你的 SDK 发布到包管理器（如npm）上，以便其他人可以方便地安装和使用你的 SDK。使用 <code>npm publish</code> 命令将你的包发布到 npm 上，并确保你具有发布权限。</p></li><li><p>版本控制：在发布新版本之前，确保你使用合适的版本控制系统（如Git）对你的代码进行管理，并按照语义化版本（Semantic Versioning）规范来管理版本号。</p></li><li><p>更新和维护：持续更新和维护你的 SDK，修复 bug、添加新功能，并及时响应用户的反馈和需求。</p></li></ol><p>以上是将第三方授权认证 SDK 发布为一个包的一般步骤。具体的实施方法和工具选择可能因你使用的编程语言和开发环境而有所不同。确保在发布包之前，仔细测试和审查你的代码，以确保其质量和安全性。</p><h2 id="手写题-输出运行结果" tabindex="-1">手写题 输出运行结果 <a class="header-anchor" href="#手写题-输出运行结果" aria-label="Permalink to &quot;手写题 输出运行结果&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;p&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;q&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;k&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;q&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;q&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;q&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;f&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;k&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 三次</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;p&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 三次</span></span></code></pre></div><h2 id="手写题-创建一个-函数-fn-使其有如下输出值" tabindex="-1">手写题， 创建一个 函数 fn， 使其有如下输出值 <a class="header-anchor" href="#手写题-创建一个-函数-fn-使其有如下输出值" aria-label="Permalink to &quot;手写题， 创建一个 函数 fn， 使其有如下输出值&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*26 start a1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">31 start a2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">37 start a3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">39 end a3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">33 end a2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">28 end a1 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;start a1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;end a1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;start a2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;end a2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;start a3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;end a3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ... 实现具体代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reduceRight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">current</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      current</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(next);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始的 next 函数是一个空函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([a1, a2, a3]);</span></span></code></pre></div>`,18),p=[h];function k(t,e,E,r,d,g){return a(),i("div",null,p)}const F=s(l,[["render",k]]);export{c as __pageData,F as default};
